// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: gama.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAvailableGameServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game *string `protobuf:"bytes,1,opt,name=game,proto3,oneof" json:"game,omitempty"`
	Map  *string `protobuf:"bytes,2,opt,name=map,proto3,oneof" json:"map,omitempty"`
}

func (x *GetAvailableGameServersRequest) Reset() {
	*x = GetAvailableGameServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gama_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableGameServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableGameServersRequest) ProtoMessage() {}

func (x *GetAvailableGameServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gama_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableGameServersRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableGameServersRequest) Descriptor() ([]byte, []int) {
	return file_gama_proto_rawDescGZIP(), []int{0}
}

func (x *GetAvailableGameServersRequest) GetGame() string {
	if x != nil && x.Game != nil {
		return *x.Game
	}
	return ""
}

func (x *GetAvailableGameServersRequest) GetMap() string {
	if x != nil && x.Map != nil {
		return *x.Map
	}
	return ""
}

type GameServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Game string `protobuf:"bytes,3,opt,name=game,proto3" json:"game,omitempty"`
	Map  string `protobuf:"bytes,4,opt,name=map,proto3" json:"map,omitempty"`
	// waiting, playing
	Status     string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Players    []string `protobuf:"bytes,6,rep,name=players,proto3" json:"players,omitempty"`
	MinPlayers int32    `protobuf:"varint,7,opt,name=min_players,json=minPlayers,proto3" json:"min_players,omitempty"`
	MaxPlayers int32    `protobuf:"varint,8,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	// scheduled, ready, allocated
	ServerStatus string `protobuf:"bytes,9,opt,name=serverStatus,proto3" json:"serverStatus,omitempty"`
}

func (x *GameServer) Reset() {
	*x = GameServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gama_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameServer) ProtoMessage() {}

func (x *GameServer) ProtoReflect() protoreflect.Message {
	mi := &file_gama_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameServer.ProtoReflect.Descriptor instead.
func (*GameServer) Descriptor() ([]byte, []int) {
	return file_gama_proto_rawDescGZIP(), []int{1}
}

func (x *GameServer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameServer) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *GameServer) GetMap() string {
	if x != nil {
		return x.Map
	}
	return ""
}

func (x *GameServer) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GameServer) GetPlayers() []string {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameServer) GetMinPlayers() int32 {
	if x != nil {
		return x.MinPlayers
	}
	return 0
}

func (x *GameServer) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *GameServer) GetServerStatus() string {
	if x != nil {
		return x.ServerStatus
	}
	return ""
}

type GetAvailableGameServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers []*GameServer `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *GetAvailableGameServersResponse) Reset() {
	*x = GetAvailableGameServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gama_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableGameServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableGameServersResponse) ProtoMessage() {}

func (x *GetAvailableGameServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gama_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableGameServersResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableGameServersResponse) Descriptor() ([]byte, []int) {
	return file_gama_proto_rawDescGZIP(), []int{2}
}

func (x *GetAvailableGameServersResponse) GetServers() []*GameServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

var File_gama_proto protoreflect.FileDescriptor

var file_gama_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x6d,
	0x61, 0x70, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x70, 0x22, 0xda, 0x01, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x4e, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x32, 0x79, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x15,
	0x5a, 0x13, 0x6d, 0x69, 0x6e, 0x6b, 0x69, 0x2e, 0x69, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x61, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gama_proto_rawDescOnce sync.Once
	file_gama_proto_rawDescData = file_gama_proto_rawDesc
)

func file_gama_proto_rawDescGZIP() []byte {
	file_gama_proto_rawDescOnce.Do(func() {
		file_gama_proto_rawDescData = protoimpl.X.CompressGZIP(file_gama_proto_rawDescData)
	})
	return file_gama_proto_rawDescData
}

var file_gama_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_gama_proto_goTypes = []interface{}{
	(*GetAvailableGameServersRequest)(nil),  // 0: proto.GetAvailableGameServersRequest
	(*GameServer)(nil),                      // 1: proto.GameServer
	(*GetAvailableGameServersResponse)(nil), // 2: proto.GetAvailableGameServersResponse
}
var file_gama_proto_depIdxs = []int32{
	1, // 0: proto.GetAvailableGameServersResponse.servers:type_name -> proto.GameServer
	0, // 1: proto.GamaService.GetAvailableGameServers:input_type -> proto.GetAvailableGameServersRequest
	2, // 2: proto.GamaService.GetAvailableGameServers:output_type -> proto.GetAvailableGameServersResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gama_proto_init() }
func file_gama_proto_init() {
	if File_gama_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gama_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableGameServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gama_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gama_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableGameServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gama_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gama_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gama_proto_goTypes,
		DependencyIndexes: file_gama_proto_depIdxs,
		MessageInfos:      file_gama_proto_msgTypes,
	}.Build()
	File_gama_proto = out.File
	file_gama_proto_rawDesc = nil
	file_gama_proto_goTypes = nil
	file_gama_proto_depIdxs = nil
}
